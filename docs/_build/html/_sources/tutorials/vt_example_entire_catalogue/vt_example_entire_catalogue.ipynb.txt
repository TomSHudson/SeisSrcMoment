{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Example of processing moment magnitudes for an entire earthqauke catalogue"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This example shows how to use SeisSrcMoment to process an entire earthquake catalogue.\n",
    "\n",
    "Notes for this example:\n",
    "\n",
    "We do not include all the data to run for an entire earthquake catalogue, as that would be inappropriate to host on GitHub. However, instead we:\n",
    "1. Include an example event to show how a full catalogue would be processed.\n",
    "2. Include a python dictionary that is in the same format as the outputs from SeisSrcMoment, for a full earthquake catalogue from Uturuncu volcano, Bolivia, in order to show how the catalogue post-processing code works.\n",
    "3. Shows example of how to analyse and plot temporal b-value variations."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Import neccessary modules:\n",
    "import SeisSrcMoment\n",
    "import pandas as pd\n",
    "%load_ext autoreload\n",
    "%autoreload 2"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 1. Find magnitudes for small catalogue example:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Specify parameters for processing catalogue:\n",
    "inventory_fname = \"data/IRISDMC-Plutons_dataless.dataless\"  # The inventory fname, pointing to the dataless file for the network\n",
    "mseed_dir = \"data/mseed_data\"\n",
    "out_fname = 'small_vt_magnitudes_catalogue.pkl'\n",
    "nonlinloc_hyp_files_dir = \"data/NLLoc_data\"\n",
    "nonlinloc_hyp_files_list = ['loc.Tom_RunNLLoc000.20100516.063457.grid0.loc.hyp']\n",
    "stations_not_to_process = []\n",
    "window_before_after = [0.1, 0.6] # The time before and after the phase pick to use for calculating the magnitude within (in seconds)\n",
    "filt_freqs = [0.5, 49.0] # The frequencies with which to filter the data prior to calculating the moment magnitude.\n",
    "MT_six_tensor = [] # If not specified, assumes isotropic source.\n",
    "density = 2750. # Density of medium, in kg/m3\n",
    "Vp = 'from_depth' # P-wave velocity in m/s (or str if using from depth. If from_depth, will use vel_model_df to determine velocity model)\n",
    "phase_to_process = 'P' # P or S. Phase to process. If P, will use L component, if S will use T component.\n",
    "vel_model_df = pd.read_csv(\"data/1D_vel_model.csv\") # Velocity model to use if Vp = 'from_depth'\n",
    "verbosity_level = 1 # Verbosity level (1 for moment only) (2 for major parameters) (3 for plotting of traces)\n",
    "plot_switch = False\n",
    "remove_noise_spectrum = False # If True, removes noise using spectrum taken from window before trace.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "-----------------------------------------------------\n",
      "Processing for event: data/NLLoc_data/loc.Tom_RunNLLoc000.20100516.063457.grid0.loc.hyp\n",
      "Warning: Need to specify MT_six_tensor or MT_data_filename for accurate radiation pattern correction. \n",
      " Using average radiation pattern value instead.\n",
      "Station (PLLO) or channel (HHN) not in instrument inventory, therefore not correcting for this component and removing it.\n",
      "Station (PLLO) or channel (HHZ) not in instrument inventory, therefore not correcting for this component and removing it.\n",
      "Station (PLLO) or channel (HHE) not in instrument inventory, therefore not correcting for this component and removing it.\n",
      "Processing data for station: PLLO\n",
      "Processing data for station: PLSM\n",
      "Overall seismic moment (Nm): 15521566467248.895\n",
      "Processing data for station: PLLA\n",
      "Overall seismic moment (Nm): 13801855234245.54\n",
      "Processing data for station: PLTM\n",
      "Overall seismic moment (Nm): 25573773257795.145\n",
      "Processing data for station: PLRR\n",
      "Overall seismic moment (Nm): 19571298788186.605\n",
      "Processing data for station: PLAR\n",
      "Overall seismic moment (Nm): 5471550950741.204\n",
      "Processing data for station: PL03\n",
      "Overall seismic moment (Nm): 48727946216246.39\n",
      "Average seismic moment for event: 21444665152410.63 +/- 5561705572902.97\n",
      "Moment magnitude and error: 2.887546179559715 (+/- 0.1423945344533042 for n_obs= 6 )\n",
      "-----------------------------------------------------\n"
     ]
    }
   ],
   "source": [
    "# Process data for small catalogue (single event in this case):\n",
    "small_mags_dict = SeisSrcMoment.catalogue.get_event_moment_magnitudes(nonlinloc_hyp_files_dir, nonlinloc_hyp_files_list, mseed_dir, out_fname, window_before_after, filt_freqs, density, Vp, phase_to_process=phase_to_process, MT_six_tensor=MT_six_tensor, stations_not_to_process=stations_not_to_process, inventory_fname=inventory_fname, remove_noise_spectrum=remove_noise_spectrum, vel_model_df=vel_model_df, verbosity_level=verbosity_level, plot_switch=plot_switch)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'data/NLLoc_data/loc.Tom_RunNLLoc000.20100516.063457.grid0.loc.hyp': {'PLSM': {'M_0': 15521566467248.895,\n",
       "   'Sigma_0': 7.462354882884014e-08,\n",
       "   'f_c': 9.888233395707239,\n",
       "   't_star': 0.03633999901647883,\n",
       "   'Q': 99.04360807658419,\n",
       "   'Sigma_0_stdev': 9.087859776600538e-09,\n",
       "   'f_c_stdev': 8.742886810741158,\n",
       "   't_star_stdev': 0.030655754236235826,\n",
       "   'Q_stdev': 117.40845103191727},\n",
       "  'PLLA': {'M_0': 13801855234245.54,\n",
       "   'Sigma_0': 8.99397480658813e-08,\n",
       "   'f_c': 6.304311684544616,\n",
       "   't_star': 0.03392771408215964,\n",
       "   'Q': 109.115014412225,\n",
       "   'Sigma_0_stdev': 8.22116264693659e-09,\n",
       "   'f_c_stdev': 3.6489702498794476,\n",
       "   't_star_stdev': 0.03094900524682471,\n",
       "   'Q_stdev': 119.61686592264596},\n",
       "  'PLTM': {'M_0': 25573773257795.145,\n",
       "   'Sigma_0': 9.875372519344738e-08,\n",
       "   'f_c': 9.517629242631145,\n",
       "   't_star': 0.030846363104357177,\n",
       "   'Q': 136.32753906249513,\n",
       "   'Sigma_0_stdev': 1.0967411233746552e-08,\n",
       "   'f_c_stdev': 7.559368629234954,\n",
       "   't_star_stdev': 0.028414495728912977,\n",
       "   'Q_stdev': 147.99519270603068},\n",
       "  'PLRR': {'M_0': 19571298788186.605,\n",
       "   'Sigma_0': 7.810585924953551e-08,\n",
       "   'f_c': 7.108672819864915,\n",
       "   't_star': 0.03777633162509596,\n",
       "   'Q': 157.31634259096046,\n",
       "   'Sigma_0_stdev': 9.660738708169465e-09,\n",
       "   'f_c_stdev': 5.790080943783466,\n",
       "   't_star_stdev': 0.03937398267922096,\n",
       "   'Q_stdev': 150.9330253985095},\n",
       "  'PLAR': {'M_0': 5471550950741.204,\n",
       "   'Sigma_0': 1.976462835659904e-08,\n",
       "   'f_c': 6.432798077441835,\n",
       "   't_star': 0.01776713900937713,\n",
       "   'Q': 345.0070732783035,\n",
       "   'Sigma_0_stdev': 1.1202250954183945e-09,\n",
       "   'f_c_stdev': 2.0570103689026746,\n",
       "   't_star_stdev': 0.015353403651592852,\n",
       "   'Q_stdev': 399.2462368119944},\n",
       "  'PL03': {'M_0': 48727946216246.39,\n",
       "   'Sigma_0': 1.1051779336441324e-07,\n",
       "   'f_c': -8.024389274295606,\n",
       "   't_star': 0.04347152828263567,\n",
       "   'Q': 159.6539439901699,\n",
       "   'Sigma_0_stdev': 1.792139411948789e-08,\n",
       "   'f_c_stdev': 8.865041390516696,\n",
       "   't_star_stdev': 0.0478537004126364,\n",
       "   'Q_stdev': 145.033735777104}}}"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# And print example of output dict structure:\n",
    "small_mags_dict"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Note that one not only gets the seismic moment release, M_0 for each event (which can easily be converted into $M_w$), but also:\n",
    "1. $t^*$, which can be used for attenuation tomography.\n",
    "2. An approximation of the path-average Q, which can be used to assess the potential for attenuation tomography.\n",
    "3. $f_c$, the corner frequency, which can be used for stress-drop or earthquake fault area calculations."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2. Plot up entire large VT catalogue as Gutenberg-Richter distribution:"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Note that the code supports a number of ways to find the magnitude of completeness, Mc. The one we use here is the b-value stability method (BVS), detailed in Roberts et al 2015."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "entire_large_mags_catalogue_fname = \"data/catalogue_output_data/entire_vt_magnitudes_catalogue.pkl\"\n",
    "SeisSrcMoment.catalogue.plot_summary_Gutenberg_Richter(entire_large_mags_catalogue_fname, Q_filt=1000., upper_Mw_filt=4.0, Mc_method=\"BVS\", fig_out_fname='')\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 3. Analyse and plot b-value temporal variaitons:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Notes:\n",
    "# Uses Roberts et al 2016 method\n",
    "\n",
    "# Specify parameters for plotting b-value temporal variations:\n",
    "\n",
    "# Note:\n",
    "# Uses Smith1981 methog to find b-value (Aki maximum likelihood method)\n",
    "# Set specific b-value through time parameters:\n",
    "M_completeness = 2.11\n",
    "eq_samp_size = 100 #100 # The window size for the moving calculation of b-value\n",
    "\n",
    "# Get earthquake magnitudes dict:\n",
    "entire_large_mags_catalogue_dict = SeisSrcMoment.catalogue.read_magnitude_catalogue(entire_large_mags_catalogue_fname)\n",
    "\n",
    "# Set parameters:\n",
    "Q_filt = 1000.\n",
    "upper_Mw_filt = 4.0\n",
    "min_max_mag_plot_lims = [-1.0, 4.5]\n",
    "fig_out_fname = ''\n",
    "\n",
    "# Sort nonlinloc event fnames into ascending order:\n",
    "nonlinloc_fnames = list(entire_large_mags_catalogue_dict.keys())\n",
    "nonlinloc_fnames_time_sorted = SeisSrcMoment.catalogue.sort_nonlinloc_fnames_into_chrono_order(nonlinloc_fnames)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/eart0504/opt/anaconda3/lib/python3.7/site-packages/numpy/lib/function_base.py:393: RuntimeWarning: Mean of empty slice.\n",
      "  avg = a.mean(axis)\n",
      "/Users/eart0504/opt/anaconda3/lib/python3.7/site-packages/numpy/core/_methods.py:161: RuntimeWarning: invalid value encountered in double_scalars\n",
      "  ret = ret.dtype.type(ret / rcount)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Processing for eq samp window: 0 / 5000\n",
      "Processing for eq samp window: 1000 / 5000\n",
      "Processing for eq samp window: 2000 / 5000\n",
      "Processing for eq samp window: 3000 / 5000\n",
      "Processing for eq samp window: 4000 / 5000\n"
     ]
    }
   ],
   "source": [
    "# Calculate b-values through time, entire region:\n",
    "event_times, b_values_through_time, b_values_errs_through_time = SeisSrcMoment.catalogue.calc_b_values_through_time_probabilistic(nonlinloc_fnames_time_sorted, entire_large_mags_catalogue_dict,\n",
    "                                                                    min_eq_samp_size=50, max_eq_samp_size=500, number_of_eq_samp_windows=5000, \n",
    "                                                                        Q_filt=Q_filt, upper_Mw_filt=upper_Mw_filt)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "# And calc. event window pdfs:\n",
    "time_labels, b_value_labels, b_value_time_array, b_values_through_time_pdfs = SeisSrcMoment.catalogue.calc_event_window_pdf(event_times, b_values_through_time, b_values_errs_through_time, num_samps_per_window=10, b_value_res=0.01)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/eart0504/opt/anaconda3/lib/python3.7/site-packages/ipykernel_launcher.py:3: UserWarning: Matplotlib is currently using module://ipykernel.pylab.backend_inline, which is a non-GUI backend, so cannot show the figure.\n",
      "  This is separate from the ipykernel package so we can avoid doing imports until\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# And plot b-values throguh time:\n",
    "fig = SeisSrcMoment.catalogue.plot_temporal_b_values(time_labels, b_value_labels, b_value_time_array)\n",
    "fig.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
